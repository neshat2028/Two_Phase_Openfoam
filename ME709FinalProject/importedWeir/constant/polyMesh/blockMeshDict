/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;	//This gives you the scale: 0.001 would mean all units in this file are [mm]

vertices		//list of vertices defining the geometry
(
    (-0.25 0 0)		//This is point 0. Not 1!
    (1.2 0 0)		//This is point 1
    (1.2 1 0)		//point 2
    (-0.25 1 0)		//point 3
    (-0.25 0 0.6)	//point 4
    (1.2 0 0.6)		//point 5
    (1.2 1 0.6) 	//point 6
    (-0.25 1 0.6)	//point 7
);

blocks			//defining the block which the geometry is made out of
(
    hex (0 1 2 3 4 5 6 7) (50 25 50) simpleGrading (1 1 1)  	
//this means that the only block in the geometry is defined by vertices (0 1 2 ...), there are 100, 10 
//and 1 cells in the x, y, and z direction and that in each direction all the cells have the same length 
);

edges
(
);

boundary
(
    leftWall	//choose a name for the boundary
    {
        type wall;	//define the type of the boundary
        faces
        (
            (7 6 5 4)	//list the faces; vertices should be listed in clockwise direction, as seen from the block
	)
    }
  
    rightWall
    {
	type wall;
	faces
        (    
	    (1 2 3 0)
        );
    }

    lowerWall
    {
	type wall;
	faces
	(
	    (0 1 5 4)
	);
    }

    frontAndBack
    {
        type wall;
        faces
        (
            (0 4 7 3)
            (1 5 6 2)
        );
    }

    atmosphere
    {
	type patch;
	faces
	(
	    (7 6 2 3)
	);
    }    
);


// ************************************************************************* //
